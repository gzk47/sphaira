name: build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        preset: [Release]
    runs-on: ${{ matrix.os }}
    container: devkitpro/devkita64:latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true
    - name: Fix Git & Env
      run: |
        git config --global --add safe.directory /__w/sphaira/sphaira
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - uses: lukka/get-cmake@v3.31.6
    - name: Get Version & Configure & Build
      run: |
        VER=$(grep -oP 'set\(sphaira_VERSION \K[0-9]+\.[0-9]+\.[0-9]+' sphaira/CMakeLists.txt)
        echo "VER=${VER}" >> $GITHUB_ENV
        cmake --preset ${{ matrix.preset }}
        cmake --build --preset ${{ matrix.preset }} --parallel $(nproc)

    - name: Create & Push Tag
      if: ${{ github.event_name != 'pull_request' && env.VER != '' }}
      run: |
        if ! git tag | grep -q "^${{ env.VER }}$"; then
          git tag ${{ env.VER }}
          git push origin ${{ env.VER }}
        fi
    - name: Release
      if: ${{ github.event_name != 'pull_request' && env.VER != '' }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VER }}
        name: sphaira v${{ env.VER }}
        files: build/${{ matrix.preset }}/sphaira.nro
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Fallback Artifact
      if: ${{ github.event_name != 'pull_request' && env.VER == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: sphaira-${{ matrix.preset }}
        path: build/${{ matrix.preset }}/sphaira.nro
